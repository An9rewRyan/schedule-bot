#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Mini App
"""

import subprocess
import sys
import time
import signal
from pathlib import Path

def run_command(cmd, cwd=None, name="Command"):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å"""
    try:
        process = subprocess.Popen(cmd, cwd=cwd)
        print(f"‚úÖ {name} –∑–∞–ø—É—â–µ–Ω")
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {name}: {e}")
        return None

def main():
    processes = []
    
    def cleanup():
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
        for process in processes:
            if process:
                process.terminate()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    def signal_handler(signum, frame):
        cleanup()
        sys.exit(0)
    
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Mini App")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞
    backend_process = run_command(
        [sys.executable, "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000"],
        cwd="backend",
        name="Backend"
    )
    if backend_process:
        processes.append(backend_process)
    
    time.sleep(3)
    
    # –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    frontend_process = run_command(
        [sys.executable, "server.py"],
        cwd="frontend",
        name="Frontend"
    )
    if frontend_process:
        processes.append(frontend_process)
    
    time.sleep(2)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot_process = run_command(
        [sys.executable, "main.py"],
        cwd="tg_bot",
        name="Bot"
    )
    if bot_process:
        processes.append(bot_process)
    
    print("\n" + "=" * 50)
    print("üéØ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
    print("üåê Frontend: http://localhost:3000/index.html")
    print("üåê API: http://localhost:8000/api/docs")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    
    try:
        while True:
            time.sleep(1)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
            for i, process in enumerate(processes):
                if process and process.poll() is not None:
                    print(f"‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å {i+1} –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è")
                    cleanup()
                    return
    except KeyboardInterrupt:
        pass
    finally:
        cleanup()

if __name__ == "__main__":
    main() 