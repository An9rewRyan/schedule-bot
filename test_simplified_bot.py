#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å —Ç–æ–ª—å–∫–æ Mini App —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
"""
import asyncio
import sys
import os
import time
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from aiogram import Bot
from tg_bot.constants import BOT_TOKEN

async def test_simplified_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–æ—Ç"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = Bot(token=BOT_TOKEN)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: {me.first_name} (@{me.username})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        webhook_info = await bot.get_webhook_info()
        print(f"üì° Webhook URL: {webhook_info.url or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (polling)'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º pending updates
        updates = await bot.get_updates(limit=1)
        print(f"üì® Pending updates: {len(updates)}")
        
        print("\nüéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞:")
        print("  - /start - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É Mini App")
        print("  - /app - –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ Mini App")
        print("  - –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã")
        
        print("\n‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –≤ Telegram –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞: {e}")
    
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(test_simplified_bot()) 