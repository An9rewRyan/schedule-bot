#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤
"""

import requests
import json
from datetime import date

def test_timeslots_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤...")
    
    # URL API
    base_url = "http://localhost:8000/api"
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤ –±–µ–∑ telegram_id
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –±–µ–∑ telegram_id:")
        response = requests.get(f"{base_url}/slots/")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã: {len(data.get('available_periods', []))}")
            for period in data.get('available_periods', [])[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {period.get('date')} {period.get('start_time')}-{period.get('end_time')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤ —Å telegram_id
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å telegram_id:")
        telegram_id = 123456789  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        response = requests.get(f"{base_url}/slots/?telegram_id={telegram_id}")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã: {len(data.get('available_periods', []))}")
            for period in data.get('available_periods', [])[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {period.get('date')} {period.get('start_time')}-{period.get('end_time')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É:")
        today = date.today()
        response = requests.get(f"{base_url}/slots/?selected_date={today}")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –Ω–∞ {today}: {len(data.get('available_periods', []))}")
            for period in data.get('available_periods', [])[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {period.get('date')} {period.get('start_time')}-{period.get('end_time')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω: python -m uvicorn src.main:app --reload")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_backend_health():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±—ç–∫–µ–Ω–¥–∞"""
    print("üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –±—ç–∫–µ–Ω–¥–∞...")
    
    try:
        response = requests.get("http://localhost:8000/api/docs")
        print(f"–°—Ç–∞—Ç—É—Å API docs: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –ë—ç–∫–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ö†Ô∏è  –ë—ç–∫–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

def main():
    print("=" * 50)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Telegram Mini App")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±—ç–∫–µ–Ω–¥–∞
    if not test_backend_health():
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥: cd backend && python -m uvicorn src.main:app --reload")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: python backend/scripts/create_test_data.py")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ç–∞–π–º—Å–ª–æ—Ç–æ–≤
    test_timeslots_api()
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ï—Å–ª–∏ API —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Mini App")
    print("2. –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print("   python backend/scripts/create_test_data.py")

if __name__ == "__main__":
    main() 